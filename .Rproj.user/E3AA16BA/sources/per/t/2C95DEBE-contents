library(polymapR)

ALL_dosages <- as.matrix(read.csv("MBxGV_yes_par_scores_compared_calls_ready_for_mapping.csv",
                                  stringsAsFactors = FALSE,
                                  row.names = 1)) #first column contains rownames

F1checked <- checkF1(dosage_matrix = ALL_dosages,parent1 = "P1",parent2 = "P2",
                     F1 = colnames(ALL_dosages)[3:ncol(ALL_dosages)],
                     polysomic = TRUE, disomic = FALSE, mixed = FALSE, ploidy = 4)


F1checked_remove_qall<-subset(F1checked$checked_F1, qall_mult > 0)
F1checked_remove_p0.001<-subset(F1checked_remove_qall, Pvalue_bestParentfit >= 0.001)
ALL_dosages_filteredqall<-subset(ALL_dosages, row.names(ALL_dosages) %in% F1checked_remove_qall$MarkerName)
ALL_dosages_filteredqall_n_p0001<-subset(ALL_dosages_filteredqall, row.names(ALL_dosages_filteredqall) %in% F1checked_remove_p0.001$MarkerName)

ALL_dosages<-ALL_dosages_filteredqall
#ALL_dosages<-ALL_dosages_filteredqall_n_p0001


#summary data
mds <- marker_data_summary(dosage_matrix = ALL_dosages,
                           ploidy = 4,
                           pairing = "random",
                           parent1 = "P1",
                           parent2 = "P2",
                           progeny_incompat_cutoff = 0.1)

PCA_progeny(ALL_dosages, highlight=list(c("P1", "P2")), colors="red")

#Convert marker dosages to simple segregations; remove non-segregating data
pq_before_convert <- parental_quantities(dosage_matrix = ALL_dosages,
                                         las = 2)

segregating_data <- convert_marker_dosages(dosage_matrix = ALL_dosages, ploidy = 4)

pq_after_convert <- parental_quantities(dosage_matrix = segregating_data)

#missing value rate per marker (start out using cuttof of 0.10 but if there are problems in mapping try rerunning this step with 0.05)
screened_data <- screen_for_NA_values(dosage_matrix = segregating_data,
                                      margin = 1, # margin 1 means markers
                                      cutoff =  0.00,
                                      print.removed = FALSE)


#mising value rate per individual seeing if there is too much missing data in individuals
# Again, it is not clear what an acceptable threshold for the rate of missing values should be, but we recommend a cut-off rate of 0.1 - 0.15 (10-15%) missing values allowed.
screened_data2 <- screen_for_NA_values(dosage_matrix = screened_data,
                                       cutoff = 0.1,
                                       margin = 2, #margin = 2 means columns
                                       print.removed = FALSE)


#screen for duplicate individuals
screened_data3 <- screen_for_duplicate_individuals(dosage_matrix = screened_data2,
                                                   cutoff = 0.95,
                                                   plot_cor = T)


#screen for duplicate markers
screened_data4 <- screen_for_duplicate_markers(dosage_matrix = screened_data3)

dim(screened_data4$filtered_dosage_matrix)

filtered_data <- screened_data4$filtered_dosage_matrix


#look at the summary function for the filtered data just so you have clear record of number of marker
pq_screened_data <- parental_quantities(dosage_matrix = filtered_data)

library(doParallel)

SN_SN_P1 <- linkage(dosage_matrix = filtered_data,
                    markertype1 = c(1,0),
                    target_parent = "P1",
                    other_parent = "P2",
                    ploidy = 4,
                    pairing = "random",
                    ncores = 8)

P1_homologues <- cluster_SN_markers(linkage_df = SN_SN_P1,
                                    LOD_sequence = seq(1, 10, .5),
                                    LG_number = 7,
                                    ploidy = 4,
                                    parentname = "P1",
                                    plot_network = FALSE,
                                    plot_clust_size = T)



